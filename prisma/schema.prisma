// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String
  phoneNumber   String?
  profilePicture String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]

  @@map("users")
}

model Theater {
  id                String     @id @default(uuid())
  name              String
  location          String
  city              String     @db.VarChar(100)
  country           String     @db.VarChar(100)
  address           String
  facilities        String[]
  capacity          Int
  showTimes         String[]   // Array of available show times (e.g. ["10:00", "13:00", "16:00"])
  regularPriceWeekday Float
  regularPriceWeekend Float
  vipPriceWeekday    Float
  vipPriceWeekend    Float
  bookings          Booking[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Booking {
  id          String   @id @default(uuid())
  userId      String
  theaterId   String
  tmdbMovieId Int     // TMDB Movie ID
  posterUrl   String? // Movie poster URL
  showDate    DateTime // The date of the show
  showTime    String   // The time slot (e.g. "10:00")
  isVIP       Boolean  @default(false)
  seats       String[] // Array of seat numbers
  totalPrice  Float
  status      BookingStatus @default(PENDING)
  user        User     @relation(fields: [userId], references: [id])
  theater     Theater  @relation(fields: [theaterId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
